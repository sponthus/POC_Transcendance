(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const d of s.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&n(d)}).observe(document,{childList:!0,subtree:!0});function t(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(o){if(o.ep)return;o.ep=!0;const s=t(o);fetch(o.href,s)}})();class i{constructor(){this.routes={},this.appElement=document.getElementById("app"),this.appElement||console.error("Élément #app non trouvé dans le DOM"),window.addEventListener("popstate",()=>{console.log("Événement popstate déclenché"),this.handleRouteChange()})}static getInstance(){return i.instance||(i.instance=new i),i.instance}register(e,t){console.log(`Route enregistrée: ${e}`),this.routes[e]=t}navigate(e){console.log(`Navigation vers: ${e}`),this.routes[e]?(window.history.pushState({},"",e),this.renderCurrentRoute()):console.error(`Route non définie: ${e}`)}handleRouteChange(){this.renderCurrentRoute()}renderCurrentRoute(){if(!this.appElement&&(this.appElement=document.getElementById("app"),console.log("Élément app trouvé?",!!this.appElement),!this.appElement)){console.error("Élément #app introuvable");return}let e=window.location.pathname;const t=e===""||e==="/"?"/":e;if(this.routes[t]){for(console.log(`Route trouvée pour ${t}`);this.appElement.firstChild;)this.appElement.removeChild(this.appElement.firstChild);try{const n=this.routes[t]();this.appElement.appendChild(n),console.log("Contenu rendu avec succès")}catch(n){console.error("Erreur lors du rendu:",n)}}else console.error(`Route inconnue: ${t}`),console.log("Routes disponibles:",Object.keys(this.routes)),this.routes["/"]&&(console.log("Redirection vers la route par défaut '/'"),this.navigate("/"))}initialize(){if(console.log("Initialisation du router"),window.router=this,window.navigateTo=e=>{console.log(`navigateTo appelé avec: ${e}`),this.navigate(e)},window.navigateCalls&&Array.isArray(window.navigateCalls)){const e=window.navigateCalls;e.length>0&&(console.log(`Traitement de ${e.length} appels navigateTo retardés`),this.navigate(e[e.length-1]))}else this.renderCurrentRoute()}}class g{render(){const e=document.createElement("div"),t=document.createElement("button");t.innerText="Tournament",t.addEventListener("click",()=>{window.navigateTo("/tournament")});const n=document.createElement("button");return n.innerText="Start Game",n.addEventListener("click",()=>{window.navigateTo("/game")}),e.appendChild(n),e.appendChild(t),e}}class r{constructor(){this.player={id:0,name:"",score:0},this.gameState="idle",this.tournament={players:[],matches:[]}}static getInstance(){return r.instance||(r.instance=new r),r.instance}setPlayer(e){this.player.name=e}setGameState(e){this.gameState=e}setTournament(e,t){this.tournament.players=e,this.tournament.matches=t}}const c=r.getInstance();c.setPlayer("Alice");c.setGameState("playing");console.log(c.player.name);console.log(c.gameState);const p=600,f=400,l=40,u=5,h=20,m=10;class y{constructor(){this.state=r.getInstance()}render(){const e=document.createElement("div"),t=document.createElement("canvas");t.id="gameCanvas",t.width=p,t.height=f,t.style.border="1px solid red";const n=document.createElement("div");return n.innerText=`Score : ${this.state.player.score}`,e.addEventListener("keydown",o=>{console.log(`key pressed ${o.key}`),o.key=="ArrowUp"?this.socket.send(JSON.stringify({type:"paddle_a",message:"up"})):o.key=="ArrowDown"&&this.socket.send(JSON.stringify({type:"paddle_a",message:"down"}))}),e.append(t,n),this.initWebSocket(n),e}initWebSocket(e){this.socket=new WebSocket("ws://localhost:8080"),this.socket.onopen=()=>{console.log("Connected to WebSocket server"),this.socket.send(JSON.stringify({type:"join",player:this.state.player.id}))},this.socket.onmessage=t=>{const n=JSON.parse(t.data);n.type==="updateScore"&&(this.state.player.score=n.score,e.innerText=`Score : ${this.state.player.score}`),n.type==="ballMove"&&(this.updateCanvas(n),console.log("Recieved ball position:",n.x,n.y))},this.socket.onerror=t=>{console.error("Error WebSocket:",t)},this.socket.onclose=()=>{console.log("Connexion WebSocket closed")}}updateCanvas(e){const t=document.getElementById("gameCanvas");if(!t)return;const n=t.getContext("2d");n&&(n.clearRect(0,0,t.width,t.height),n.fillStyle="black",n.fillRect(e.x,e.y,m,m),n.fillRect(h,e.pa-l/2,u,l),n.fillRect(p-h-u,e.pb-l/2,u,l),console.log("Drawing ball at",e.x,e.y),console.log("Drawing paddle at",e.pa,e.pb))}}class v{constructor(){this.state=r.getInstance()}render(){const e=document.createElement("div"),t=document.createElement("h2");t.innerText="Tournoi en cours";const n=document.createElement("ul");return this.state.tournament.players.forEach(o=>{const s=document.createElement("li");s.innerText=o,n.appendChild(s)}),e.append(t,n),e}}class w{constructor(){this.state=r.getInstance(),this.initializeState(),this.initializeRoutes(),this.router=i.getInstance(),this.router.initialize()}initializeState(){this.state.tournament.players.length===0&&this.state.setTournament(["Alice","Bob","Charlie","Diana"],[["Alice","Bob"],["Charlie","Diana"]]),this.state.player.name||this.state.setPlayer("Joueur 1")}initializeRoutes(){this.router=i.getInstance(),this.router.register("/",()=>new g().render()),this.router.register("/game",()=>new y().render()),this.router.register("/tournament",()=>new v().render())}}window.navigateCalls=[];document.addEventListener("DOMContentLoaded",()=>{new w,console.log("App created")});
